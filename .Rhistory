x <- gamma(100) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
x <- rpois(100, 2) #sample 200 values from a normal distribution
par(mfrow = c(1, 2)) #set the figure with 1 row and 2 columns
x <- runif(100, 0, 1) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- rpois(100, 2) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
shapiro.test(x)
x <- rnorm(100, 0, 1) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
shapiro.test(x)
x <- runif(100, 0, 1) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
shapiro.test(x)
x <- rpois(100, 2) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
shapiro.test(x)
hist(x)
x <- rpois(100, 2) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
hist(model$residuals)
library(MASS)
neg.bin()
neg.bin(theta = 1)
neg.bin(theta = 50)
x <- 1:100
z <- sqrt(x) * 6.75
shapiro.test(z)
x <- rpois(100, 2) #sample 200 values from a normal distribution
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
shapiro.test(x)
x <- sqrt(1:100)*rpois(x, 2)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)*rpois(x, 1)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)*rpois(x, 4)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)*rpois(x, 100)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)*rpois(x, 1)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)*rpois(x, 2)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- sqrt(1:100)*rpois(x, 1)
groups <- factor(c(rep("A", 50), rep("B", 50)))
model <- lm(x ~ groups)
plot(model, which = 2)
x <- 1:100
z <- sqrt(x) * 6.75
theor <- rnorm(100, mean(x), sd(x))
qqplot(theor, z, xlab = 'Theoretical', ylab = 'Empirical', main = 'QQ plot')
abline(0, 1)
shapiro.test(z)
x_factor <- factor(rep("A", 100))
lm(x ~ x_factor)
x <- 1:100
z <- sqrt(x) * 6.75
theor <- rnorm(100, mean(x), sd(x))
qqplot(theor, z, xlab = 'Theoretical', ylab = 'Empirical', main = 'QQ plot')
abline(0, 1)
x <- sqrt(1:100) * 6.75
theor <- rnorm(100, mean(x), sd(x))
qqplot(theor, x, xlab = 'Theoretical', ylab = 'Empirical', main = 'QQ plot')
abline(0, 1)
shapiro.test(x)
?crop
library(raster)
?crop
?mask
r <- raster(matrix(rnorm(100), nrow = 10, ncol = 10))
plot(r)
rm <- r
rm
rm*2
r_m <- aggregate(r, 2)
mask(r, r_m)
rm(rm)
rm(r, r_m)
setwd('/home/GIT/BEHAVIOURAL-BIOLOGY-2019/non-par_ANOVA')
dataset <- read.csv('spider-nest.csv')
par(mfrow = c(1, 2)) # 1 row, 2 columns in the figure
boxplot(Number.of.nests ~ Area, data = dataset, ylab = 'Number of nests')
boxplot(log10(Number.of.nests) ~ Area, data = dataset, ylab = 'Number of nests')
setwd('/home/GIT/BEHAVIOURAL-BIOLOGY-2019/non-par_ANOVA')
dataset <- read.csv('spider-nest.csv')
par(mfrow = c(1, 2)) # 1 row, 2 columns in the figure
boxplot(Number.of.nests ~ Area, data = dataset, ylab = 'Number of nests')
boxplot(log10(Number.of.nests) ~ Area, data = dataset, ylab = 'Number of nests')
shapiro.test(dataset)
shapiro.test(dataset$Number.of.nests)
shapiro.test(log10(dataset$Number.of.nests))
model <- lm(log10(Number.of.nests) ~ Area, data = dataset)
plot(model, which = 2)
kruskal.test(dataset$Number.of.nests, dataset$Area)
forest <- subset(dataset, dataset$Area == 'Forest')
forest
dataset$Area
forest
urban <- subset(dataset, dataset$Area == 'Urban')
forest <- subset(dataset, dataset$Area == 'Forest')
agr <- subset(dataset, dataset$Area == 'Agr.')
# ks.test(forest, agr)
# ks.test(agr, urban)
# ks.test(urban, forest)
urban <- subset(dataset, dataset$Area == 'Urban')
forest <- subset(dataset, dataset$Area == 'Forest')
agr <- subset(dataset, dataset$Area == 'Agr.')
ks.test(forest, agr)
wilcox.test(urban, forest)
urban
wilcox.test(urban$Number.of.nests, forest$Number.of.nests)
wilcox.test(urban$Number.of.nests, agr$Number.of.nests)
wilcox.test(agr$Number.of.nests, forest$Number.of.nests)
0.01749*3
urban <- subset(dataset, dataset$Area == 'Urban')
forest <- subset(dataset, dataset$Area == 'Forest')
agr <- subset(dataset, dataset$Area == 'Agr.')
wilcox.test(urban$Number.of.nests, forest$Number.of.nests)
wilcox.test(urban$Number.of.nests, agr$Number.of.nests)
wilcox.test(agr$Number.of.nests, forest$Number.of.nests)
agr <- subset(dataset$Number.of.nests, dataset$Area == 'Agr.')
agr
urban <- subset(dataset$Number.of.nests, dataset$Area == 'Urban')
forest <- subset(dataset$Number.of.nests, dataset$Area == 'Forest')
agr <- subset(dataset$Number.of.nests, dataset$Area == 'Agr.')
wilcox.test(urban, forest)
wilcox.test(urban, agr)
wilcox.test(agr, forest)
wilcox.test(urban, forest,paired = F)
wilcox.test(urban, forest,paired = T)
wilcox.test(urban, forest)
wilcox.test(urban, forest)$p.value * 3
wilcox.test(urban, agr)$p.value * 3
wilcox.test(agr, forest)$p.value * 3
males <- c(33.3, 35.2, 31.2, 33.5, 34.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2)
wilcox.test(males, females)
males <- c(33.3, 35.2, 31.7, 33.5, 34.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2)
wilcox.test(males, females)
males <- c(33.3, 35.2, 31.7, 33.5, 34.5)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2)
wilcox.test(males, females)
males <- c(33.3, 35.2, 31.7, 33.5, 34.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2)
males > females
males <- c(33.3, 35.2, 29.2, 33.5, 31.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2)
wilcox.test(males, females)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2)
wilcox.test(males, females)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 32.0)
wilcox.test(males, females)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
wilcox.test(males, females)
tibble(males, females)
df <- c(males, females)
rank(df)
df <- c(males, females)
rank(df)
tibble(df, rank(df))
tibble(df, rank(df)) %>% arrange(rank(df))
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>% arrange(rank(df))
age <- c(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6)))
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank) %>%
skim()
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank)
wilcox.test(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank)
library(skimr)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank) %>%
skim()
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank) %>%
Kable()
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank) %>%
kable()
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
group_by(Sex) %>%
arrange(Rank)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank) %>%
split.data.frame()
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank) %>%
kable()
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank) %>%
kable()
wilcox.test(males, females)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
class(males)
library(skimr, dplyr)
library(skimr, tidyverse)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank) %>%
kable()
wilcox.test(males, females)
library(skimr, tibble, dplyr)
library(skimr, tibble, dplyr)
library(skimr, tibble, tidyverse)
library(skimr, tibble, dplyr)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank) %>%
kable()
wilcox.test(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank) %>%
kable()
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank)
library(skimr, tibble, dplyr)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females)
tibble(Age = age, Rank = rank(df), Sex = c(rep('M', 6), rep('F', 6))) %>%
arrange(Rank)
wilcox.test(males, females)
model <- lm(age ~ sex)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
males <- c(33.3, 35.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 28.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
shapiro.test(model)
shapiro.test(males)
shapiro.test(females)
males <- c(33.3, 40.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 24.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
males <- c(33.3, 40.2, 30.2, 33.5, 31.0, 32.0)
females <- c(31.5, 24.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
shapiro.test(females)
shapiro.test(males)
males <- c(33.3, 40.2, 30.2, 37.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
shapiro.test(males)
shapiro.test(males)
shapiro.test(females)
males <- c(39.5, 40.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 30.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
shapiro.test(males)
shapiro.test(males)
shapiro.test(females)
males <- c(39.5, 40.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
wilcox.test(males, females)
males <- c(39.5, 45.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
wilcox.test(males, females)
wilcox.test(males, females)
tibble(Age = age, Sex = sex, Rank = rank(age))
males <- c(39.5, 45.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
model <- lm(age ~ sex)
plot(model, which = 2)
wilcox.test(males, females, paired = F) # Mann-Whitney U test
wilcox.test(males, females, paired = T) # Mann-Whitney U test
wilcox.test(males, females, paired = F) # Mann-Whitney U test
wilcox.test(males, females, paired = T) # Mann-Whitney U test
data.frame(age, sex)
df <- sort(df)
df
males <- c(39.5, 45.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
df <- data.frame(age, sex) #create data.frame
df <- sort(df)
df <- data.frame(age, sex) #create data.frame
df
df <- order(df)
df
males <- c(39.5, 45.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
df <- data.frame(age, sex) #create data.frame
df
males <- c(39.5, 45.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
df <- data.frame(age, sex) #create data.frame
df$sex <- df$sex[order(df$age)]
df$age <- sort(df$age)
df
males <- c(39.5, 45.2, 30.2, 33.5, 31.0, 32.0)
females <- c(37.5, 24.3, 29.0, 28.3, 30.2, 25.5)
age <- c(males, females) #create age vector
sex <- c(rep("M", 6), rep("F", 6)) #create groups
df <- data.frame(age, sex) #create data.frame
df$sex <- df$sex[order(df$age)] #order the column
df$age <- sort(df$age) #order the age column
df
model <- lm(age ~ sex) #create a linear model
plot(model, which = 2) #check residuals
shapiro.test(age~sex)
shapiro.test(df$age[which(df$sex == "M")])
shapiro.test(df$age[which(df$sex == "F")])
boxplot(age ~ sex, data = df)
model <- lm(age ~ sex) #create a linear model
plot(model, which = 2) #check residuals
plot(model, which = 2) #check residuals
wilcox.test(males, females, paired = F) # Mann-Whitney U test (rank-sum)
```{r, fig.width=5, fig.align='center'}
model <- lm(age ~ sex) #create a linear model
plot(model, which = 2) #check residuals
wilcox.test(males, females, paired = F) # Mann-Whitney U test (rank-sum)
write.csv(df, 'marriage_age.csv')
df <- read.csv('marriage_age.csv')
boxplot(age ~ sex, data = df) #explore the data with a boxplot
A <- runif(n = 23, 0, 100)
B <- runid(n = 29, 80, 320)
A <- runif(n = 23, 0, 100)
B <- runif(n = 29, 80, 320)
C <- runif(n = 15, 200, 500)
altitude <- c(A, B, C)
species <- c(rep("A", 23), rep("B", 29), rep("C", 15))
df <- data.frame(altitude, species)
df
model <- lm(altitude ~ species, data = df)
plot(model, which = 2)
shapiro.test(altitude)
boxplot(altitude ~ species)
A <- rpois(n = 23, lambda = 1)
B <- rpois(n = 29, lambda = 2)
C <- rpois(n = 15, lambda = 0.1)
counts <- c(A, B, C)
altitude <- c(rep("0 m", 23), rep("150 m", 29), rep("300 m", 15))
df <- data.frame(altitude, species)
df
df <- data.frame(altitude, counts)
model <- lm(altitude ~ species, data = df)
plot(model, which = 2)
df
A <- rpois(n = 23, lambda = 1)
B <- rpois(n = 29, lambda = 2)
C <- rpois(n = 15, lambda = 0.1)
counts <- c(A, B, C)
altitude <- c(rep("0 m", 23), rep("150 m", 29), rep("300 m", 15))
df <- data.frame(altitude, counts)
A <- rpois(n = 23, lambda = 1)
B <- rpois(n = 29, lambda = 2)
C <- rpois(n = 15, lambda = 0.1)
counts <- c(A, B, C)
altitude <- c(rep("0(m)", 23), rep("150(m)", 29), rep("300(m)", 15))
df <- data.frame(altitude, counts)
model <- lm(altitude ~ species, data = df)
plot(model, which = 2)
model
model <- lm(counts ~ altitude, data = df)
plot(model, which = 2)
shapiro.test(counts)
A <- rpois(n = 23, lambda = 1)
B <- rpois(n = 29, lambda = 2)
C <- rpois(n = 15, lambda = 0.1)
counts <- c(A, B, C)
altitude <- c(rep("0(m)", 23), rep("150(m)", 29), rep("300(m)", 15))
df <- data.frame(altitude, counts)
write.csv(df, 'butterfly_count.csv')
df <- read.csv('butterfly_count.csv')
boxplot(counts ~ altitude, data = df)
boxplot(log10(counts) ~ altitude, data = df)
boxplot(counts ~ altitude, data = df) #explore the data
model <- lm(counts ~ altitude, data = df) #create linear model
plot(model, which = 2) #explore the residuals
kruskal.test(counts ~ altitude, data = df)
test <- kruskal.test(counts ~ altitude, data = df) #Kruskal-Wallis test
summary(test)
kruskal.test(counts ~ altitude, data = df) #Kruskal-Wallis test
subset(df, altitute != "300(m)")
subset(df, df$altitute != "300(m)")
subset(df, df$altitute != "300(m)")
df$X
subset(df, df$altitude == "0(m)")
subset(df, df$altitude != "0(m)")
subset(df, df$altitude != "150(m)")
subset(df, df$altitude != "300(m)")
wilcox.test(counts ~ altitude, data = subset(df, df$altitute != "300(m)"))
subset(df, df$altitute != "300(m)")$altitude
subset_1 <- subset(df, df$altitude != "300(m)") # != means: not equal to
subset_1
subset_1$altitude
wilcox.test(counts ~ altitude, data = subset_1)
wilcox.test(counts ~ altitude, data = subset_1)
wilcox.test(counts ~ altitude, data = subset_2)
subset_1 <- subset(df, df$altitude != "300(m)") # != means: not equal to
subset_2 <- subset(df, df$altitude != "150(m)")
subset_3 <- subset(df, df$altitude != "0(m)")
wilcox.test(counts ~ altitude, data = subset_1)
wilcox.test(counts ~ altitude, data = subset_2)
wilcox.test(counts ~ altitude, data = subset_3)
wilcox.test(males, females, paired = F) # Mann-Whitney U test (rank-sum)
wilcox.test(age ~ sex, paired = F) # Mann-Whitney U test (rank-sum)
wilcox.test(males, females, paired = F) # Mann-Whitney U test (rank-sum)
wilcox.test(age ~ sex, data = df, paired = F) # Mann-Whitney U test (rank-sum)
t.test(age ~ sex, data = df)
model <- lm(age ~ sex, data = df)
plot(model)
anova(model)
kruskal.test(counts ~ altitude, data = df) #Kruskal-Wallis test
model <- lm(counts ~ altitude, data = df)
kruskal.test(counts ~ altitude, data = df) #Kruskal-Wallis test
subset_1 <- subset(df, df$altitude != "300(m)") # != means: not equal to
anova(model)
subset_1 <- subset(df, df$altitude != "300(m)") # != means: not equal to
subset_2 <- subset(df, df$altitude != "150(m)")
subset_3 <- subset(df, df$altitude != "0(m)")
wilcox.test(counts ~ altitude, data = subset_1)
wilcox.test(counts ~ altitude, data = subset_2)
wilcox.test(counts ~ altitude, data = subset_3)
0.05/3
